name: Change Issue Label on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - dev

jobs:
  update-label:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: read
    
    steps:
      - name: Get Issues from PR Body
        id: get_body_issues
        run: |
          ISSUE_NUMBERS=$(echo "${{ github.event.pull_request.body }}" | grep -o -E '#[0-9]+' | sed 's/#//' | tr '\n' ' ' || true)
          echo "Found issue numbers in PR body: $ISSUE_NUMBERS"
          echo "issue_numbers=$ISSUE_NUMBERS" >> $GITHUB_OUTPUT
        shell: bash

      - name: Fetch Linked Issues via GraphQL
        id: get_graphql_issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          cat <<EOF > graphql-query.json
          {
            "query": "query(\$owner: String!, \$repo: String!, \$pr: Int!) { repository(owner: \$owner, name: \$repo) { pullRequest(number: \$pr) { closingIssuesReferences(first: 100) { nodes { number } } } } }",
            "variables": {
              "owner": "${{ github.repository_owner }}",
              "repo": "${{ github.event.repository.name }}",
              "pr": ${{ github.event.pull_request.number }}
            }
          }
          EOF
          
          ISSUE_NUMBERS=$(gh api graphql --input graphql-query.json --jq '.data.repository.pullRequest.closingIssuesReferences.nodes[].number' | tr '\n' ' ')
          
          echo "Found linked issue numbers via GraphQL: $ISSUE_NUMBERS"
          echo "issue_numbers=$ISSUE_NUMBERS" >> $GITHUB_OUTPUT
        shell: bash

      - name: Update Labels on Linked Issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OLD_LABEL: "status: in progress"
          NEW_LABEL: "status: in dev"
        run: |
          # Combine outputs and de-duplicate issue numbers
          ALL_ISSUE_NUMBERS=$(echo "${{ steps.get_body_issues.outputs.issue_numbers }} ${{ steps.get_graphql_issues.outputs.issue_numbers }}" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          
          echo "Final list of unique issue numbers: $ALL_ISSUE_NUMBERS"
          
          # Check if the new label exists, create it if not
          gh label view "$NEW_LABEL" --repo ${{ github.repository }} >/dev/null 2>&1 || \
          gh label create "$NEW_LABEL" --repo ${{ github.repository }} --color 0E8A16 --description "This work is completed and is in the dev branch"
          
          # Update the labels on each unique linked issue
          for ISSUE_NUMBER in $ALL_ISSUE_NUMBERS; do
            echo "Processing issue #$ISSUE_NUMBER"
            gh issue edit $ISSUE_NUMBER --repo ${{ github.repository }} --remove-label "$OLD_LABEL"
            gh issue edit $ISSUE_NUMBER --repo ${{ github.repository }} --add-label "$NEW_LABEL"
          done
        shell: bash
